# cloudbuild.yaml
steps:
  # Step 1: Build Docker Image for Next.js app
  - name: "gcr.io/cloud-builders/docker"
    id: "Build Next.js Image"
    args:
      - "build"
      - "-t"
      - "asia-southeast1-docker.pkg.dev/${_AR_PROJECT_ID}/cloud-run-source-deploy/${_SERVICE_NAME}:$COMMIT_SHA"
      - "--build-arg"
      - "NEXT_PUBLIC_SOCKET_URL=${_NEXT_PUBLIC_SOCKET_URL}"
      - "--build-arg"
      - "NEXT_PUBLIC_FRONTEND_URL=${_NEXT_PUBLIC_FRONTEND_URL}"
      - "."
    env:
      - "DOCKER_BUILDKIT=1"

  # Step 2: Push the built Docker Image to Google Artifact Registry
  - name: "gcr.io/cloud-builders/docker"
    id: "Push Image"
    args:
      - "push"
      - "asia-southeast1-docker.pkg.dev/${_AR_PROJECT_ID}/cloud-run-source-deploy/${_SERVICE_NAME}:$COMMIT_SHA"

  # Step 3: Deploy the Docker Image to Google Cloud Run
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    id: "Deploy to Cloud Run"
    entrypoint: gcloud
    args:
      - "run"
      - "deploy"
      - "${_SERVICE_NAME}"  
      - "--image"
      - "asia-southeast1-docker.pkg.dev/${_AR_PROJECT_ID}/cloud-run-source-deploy/${_SERVICE_NAME}:$COMMIT_SHA"
      - "--region"
      - "asia-southeast1"
      - "--platform"
      - "managed"
      - "--allow-unauthenticated"
      - "--port"
      - "3000"
      - "--set-env-vars"
      - "NEXT_PUBLIC_SUPABASE_URL=${_NEXT_PUBLIC_SUPABASE_URL},NEXT_PUBLIC_SUPABASE_ANON_KEY=${_NEXT_PUBLIC_SUPABASE_ANON_KEY},NEXT_PUBLIC_APP_URL=${_NEXT_PUBLIC_APP_URL},LINE_CHANNEL_TOKEN=${_LINE_CHANNEL_TOKEN},API_KEY_NOTIFICATIONS=${_API_KEY_NOTIFICATIONS},TZ=Asia/Bangkok"

# Images that will be pushed to Artifact Registry
images:
  - "asia-southeast1-docker.pkg.dev/${_AR_PROJECT_ID}/cloud-run-source-deploy/${_SERVICE_NAME}:$COMMIT_SHA"

# Step 4: Build Docker Image for Socket Server
  - name: "gcr.io/cloud-builders/docker"
    id: "Build Socket Server Image"
    args:
      - "build"
      - "-t"
      - "asia-southeast1-docker.pkg.dev/${_AR_PROJECT_ID}/cloud-run-source-deploy/${_SERVICE_NAME}-socket:$COMMIT_SHA"
      - "-f"
      - "Dockerfile.socket"
      - "."
    env:
      - "DOCKER_BUILDKIT=1"

  # Step 5: Push Socket Server Image
  - name: "gcr.io/cloud-builders/docker"
    id: "Push Socket Server Image"
    args:
      - "push"
      - "asia-southeast1-docker.pkg.dev/${_AR_PROJECT_ID}/cloud-run-source-deploy/${_SERVICE_NAME}-socket:$COMMIT_SHA"

  # Step 6: Deploy Socket Server to Cloud Run
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    id: "Deploy Socket Server"
    entrypoint: gcloud
    args:
      - "run"
      - "deploy"
      - "${_SERVICE_NAME}-socket"
      - "--image"
      - "asia-southeast1-docker.pkg.dev/${_AR_PROJECT_ID}/cloud-run-source-deploy/${_SERVICE_NAME}-socket:$COMMIT_SHA"
      - "--region"
      - "asia-southeast1"
      - "--platform"
      - "managed"
      - "--allow-unauthenticated"
      - "--port"
      - "3001"
      - "--set-env-vars"
      - "NEXT_PUBLIC_FRONTEND_URL=${_NEXT_PUBLIC_FRONTEND_URL}"

options:
  logging: CLOUD_LOGGING_ONLY

images:
  - "asia-southeast1-docker.pkg.dev/${_AR_PROJECT_ID}/cloud-run-source-deploy/${_SERVICE_NAME}:$COMMIT_SHA"
  - "asia-southeast1-docker.pkg.dev/${_AR_PROJECT_ID}/cloud-run-source-deploy/${_SERVICE_NAME}-socket:$COMMIT_SHA"
